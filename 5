基于上一任务
限制输入的数字在10-100
队列元素数量最多限制为60个，当超过60个时，添加元素时alert出提示
队列展现方式变化如图，直接用高度表示数字大小
实现一个简单的排序功能，如冒泡排序（不限制具体算法），用可视化的方法表达出来，参考见下方参考资料
任务注意事项
实现简单功能的同时，请仔细学习JavaScript基本语法、事件、DOM相关的知识
请注意代码风格的整齐、优雅
代码中含有必要的注释
示例图仅为参考，不需要完全一致
具体算法及可视化的形式不做特别限制，只要求能够展现出算法的过程
建议不使用任何第三方库、框架<img src='http://7xrp04.com1.z0.glb.clouddn.com/task_2_19_1.jpg'>

<!DOCTYPE html>
<html>
<head>
	<title></title>
	<meta charset="utf-8">
	<style type="text/css">
	*{
		padding: 0;
		margin:0;
	}
	body{
		margin-top: 5px;
			margin-left: 5px;
	}
		  input[type=button]{
		  	border-radius: 5px;
		  	margin-left: 5px;
		  	padding: 0px 8px;
		  	background: white;
		  	border: 1px solid #ccc;
		  }
		  li{
		  	float: left;
         margin-top: 105px;
		  	background: rgb(52,118,176);
		  	display: block;
        color:  rgb(52,118,176);
		  	margin-top: 5px;
		  	list-style: none;
         margin-bottom: 0;
         margin-right: 3px;
		  }
      #paixu{
        background: rgb(52,118,176);
        color: white;
      }
	</style>
</head>
<body> 
   <input type="text" name="" id='text' clientidmode="Static"  onfocus="doReset()">
   <input type="button" name="" value="左侧入" onclick="zuoce_Ru()" >
   <input type="button" name="" value="左侧出" onclick="zuoce_Chu()">
   <input type="button" name="" value="右侧入" onclick="youce_Ru()">
   <input type="button" name="" value="右侧出" onclick="youce_Chu()">
    <input type="button" name="" id='paixu' onclick="paixu()" value="排序">
   <ul id='list'></li></ul>
  
   <script type="text/javascript">
   	 var list=document.getElementById('list');
   	 var text=document.getElementById('text');
   	   var wenzi=text.value;
   	   function zuoce_Ru()
   	   {
 	      var lis=document.createElement('li');
 	      if(!isNaN(text.value)&&text.value>=10&&text.value<=100&&list.childNodes.length<=60)
   	      { var yiyou=list.childNodes[0];
   	        lis.innerHTML=text.value;
   	        list.insertBefore(lis,yiyou);
            lis.style.height=lis.innerHTML+'px';      //用的是像素来动态表示高度  如果数字多 占得 px越大。应有其他形式可以动态实现div的可视化
         	   lis.onclick=function () {
         // body...
           list.removeChild(lis)
       }
   	  } 
   	      else{
   	  	    alert("输入非法嘞~(≧▽≦)/~")
   	  }
   	   }
   	      function zuoce_Chu() 
   	      {
 	      if(!isNaN(text.value)&&text.value>=10&&text.value<=100&&list.childNodes.length<=61)
            { 
               
               var lis=document.createElement('p');
               var firstChild=list.firstChild;
              lis.innerHTML=firstChild.innerHTML;
              alert(lis.innerHTML);
              list.removeChild(firstChild)
           lis.onclick=function () {
         // body...
           list.removeChild(lis)
       }
        } 
            else{
             alert("输入非法嘞~(≧▽≦)/~")
        }
   	   }
   	      function youce_Ru()
               {
 	      var lis=document.createElement('li');
 	      if(!isNaN(text.value)&&text.value>=10&&text.value<=100&&list.childNodes.length<=60)
   	      { var yiyou=list.childNodes.lastChild;
   	        lis.innerHTML=text.value;
              lis.style.height=lis.innerHTML+'px';
   	        list.appendChild(lis,yiyou)
   	     lis.onclick=function () {
         // body...
           list.removeChild(lis)
       }
         lis.onclick=function () {
         // body...
           list.removeChild(lis)
       }
   	  } 
   	      else{
   	  	    alert("输入非法嘞~(≧▽≦)/~")
   	  }
   	   }

   	      function youce_Chu(){ 
 	      if(!isNaN(text.value)&&text.value>=10&&text.value<=100&&list.childNodes.length<=61)
   	      { 
               
   	      	var lis=document.createElement('p');
               var lastChild=list.lastChild;
   	        lis.innerHTML=lastChild.innerHTML;
   	        alert(lis.innerHTML);
              list.removeChild(lastChild)
   	     lis.onclick=function () {
         // body...
           list.removeChild(lis)
       }
   	  } 
   	      else{
   	  	    alert("输入非法嘞~(≧▽≦)/~")
   	  }
   	   }


      function paixu(argument) {
        // body...
          var new_list=list.childNodes;
          for(var i=0;i<new_list.length;i++){                //这是最粗暴简单的排序法。如果后一个比前一个小就往前移动。优点是简单。缺点是计算次数多。没有优化。
            for(var j=i+1;j<new_list.length;j++){
                 if(list.childNodes[i].innerHTML>list.childNodes[j].innerHTML){
                        var temp=list.childNodes[i].innerHTML; 

                          list.childNodes[i].innerHTML=list.childNodes[j].innerHTML;
                              list.childNodes[i].style.height=list.childNodes[i].innerHTML+'px';
                            list.childNodes[j].innerHTML=temp;
                           list.childNodes[j].style.height=temp+'px';
                 }
            }
          }
      }
        function doReset(){  
       text.value=''
    } 
      /*清空input标签里面的默认值：js
<script language="javascript" type="text/javascript">
function clearText(field)
{
    if (field.defaultValue == field.value) field.value = '';
    else if (field.value == '') field.value = field.defaultValue;
}

调用：<input type="text" value="Please enter your email address" name="q" size="10" class="inputfield" title="email address" onfocus="clearText(this)" onblur="clearText(this)"
   	  */
   </script>
</body> 
</html>
